// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Initiative {
  initiativeId Int @id @default(autoincrement())
  name String
  description String
  spokenLanguages ResponseOption @map("spoken_languages")
  financialParticipation ResponseOption @map("financial_participation")
  registrationRequired ResponseOption @map("registration_required")
  accessibility ResponseOption
  openToCitizens ResponseOption @map("open_to_citizens")
  type InitiativeType
  address String
  postcode String
  city String
  country String
  email String @unique
  webSite String                     
  createdAt DateTime @map("created_at") @default(now())
  updatedAt DateTime @map("updated_at") @updatedAt
  isActive Boolean @map("is_active") @default(true)
  responsableId Int
  responsableRole UserRole 
  
  contributor UserAccount @relation("ContributorInitiative", fields: [responsableId], references: [userAccountId], onDelete: Cascade, onUpdate: Cascade, map: "Initiative_responsableId_user_fkey") 
  organizer CompanyAccount @relation("OrganizerInitiative", fields: [responsableId], references: [companyAccountId], onDelete: Cascade, onUpdate: Cascade, map: "Initiative_responsableId_company_fkey")

  @@index([type, country, openToCitizens ])
}

model UserAccount {
  userAccountId Int @id @default(autoincrement())
  userName String @map("user_name")
  email String @unique
  password String
  role UserRole @default(CONTRIBUTOR)
  createdAt DateTime @map("created_at") @default(now())
  updatedAt DateTime @map("updated_at") @updatedAt
  lastConnect DateTime @map("last_connect")

  initiative Initiative[] @relation("ContributorInitiative")
}

model CompanyAccount {
  companyAccountId Int @id @default(autoincrement())
  companyName String @map("company_name")
  phoneNumber String @map("phone_number")
  email String @unique
  password String
  locationId Int
  role UserRole @default(ORGANIZER)
  siret String @unique
  createdAt DateTime @map("created_at") @default(now())
  updatedAt DateTime @map("updated_at") @updatedAt

  initiative Initiative[] @relation("OrganizerInitiative")
}

enum ResponseOption {
  OUI
  NON
  INDEFINI
}

enum UserRole {
  CONTRIBUTOR
  ORGANIZER
}

enum InitiativeType {
  ACTIONS_CLIMATIQUE
  CONSERVATION_DE_LA_BIODIVERSITE
  GESTION_DURABLE_DES_NUTRIMENTS
  REDUCTION_DE_LA_POLLUTION
  QUALITE_DE_L_AIR
  PROTECTION_DE_DE_LA_COUCHE_D_OZONE
  PROTECTIONS_DES_OCEANS
  GESTION_DURABLE_DE_L_EAU
  GESTION_DURABLE_DES_TERRITOIRES
  EQUITE_SOCIALE_ET_EDUCATION
}
