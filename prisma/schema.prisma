// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  seed        = "ts-node prisma/seed.ts"
  binaryTargets = ["native", "linux-arm64-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL") 
}

model User {
  id Int @id @default(autoincrement())
  firstName String @map("first_name")
  lastName String @map("last_name")
  userName String @map("user_name")
  email String @unique
  password String
  createdAt DateTime @map("created_at") @default(now())
  updatedAt DateTime @map("updated_at") @updatedAt
  loginAttempts Int @default(0) 

  initiatives Initiative[]
}

model Initiative {
  id Int @id @default(autoincrement())
  name String
  description String
  initiativeType InitiativeType[] @map("initiative_type")
  narrative String?
  associationName String?
  email String? @unique
  webSite String?                     
  createdAt DateTime @map("created_at") @default(now())
  updatedAt DateTime @map("updated_at") @updatedAt
  
  contributor User @relation(fields: [contributorId], references: [id], onDelete: Cascade, onUpdate: Cascade) 
  contributorId Int

  initiativeLocation InitiativeLocation @relation(fields: [initiativeLocationId], references: [id])
  initiativeLocationId Int @unique
}

model InitiativeLocation {
  id Int @id @default(autoincrement())
  street String
  postcode String
  city String
  country String
  latitude Float
  longitude Float

  initiativeId Initiative?
}

enum InitiativeType {
  ClimateAgricultureEnergy
  UrbanismAndTechnology
  SolidarityAndCommunities
  CultureAndTransmission
  EducationAndAwareness
  SocialAndSolidarityEconomy
}
